{"version":3,"sources":["core/apiActions.js","pages/Home.js","pages/Pricing.js","App.js","serviceWorker.js","index.js"],"names":["fetchReport","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","input","output","wrap","_context","prev","next","axios","post","baseUrl","params","abrupt","sent","t0","console","error","stop","_x","_x2","apply","this","arguments","LoadingView","react_default","createElement","className","style","opacity","Home","state","inputLink","outputLink","isLoading","changeInputUrl","e","_this","setState","target","value","changeOutputUrl","handleSubmit","_this$state","response","api","results","data","_this$state2","onChange","placeholder","padding","onClick","Home_LoadingView","height","alt","src","concat","process","objectFit","comparison","Component","Pricing","top","left","right","width","boxShadow","href","NavBar","react_router_dom","to","NotFound","App","App_NavBar","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.221d255e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = process.env.REACT_APP_SERVER_URL;\n\nexport const fetchReport = async (input, output) => {\n  try {\n    return await axios.post(baseUrl + \"/compare\", null, {\n      params: {\n        input,\n        output\n      }\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import React, { Component } from \"react\";\nimport * as api from \"../core/apiActions\";\n\nconst baseUrl = process.env.REACT_APP_SERVER_URL;\n\nconst LoadingView = () => (\n  <div\n    className=\"absolute absolute--fill bg-white pa4 tc\"\n    style={{ opacity: 0.8 }}\n  >\n    <span className=\"f4\">Generating a snapshot for you. Loading...</span>\n  </div>\n);\nclass Home extends Component {\n  state = {\n    inputLink: \"\",\n    outputLink: \"\",\n    isLoading: false\n  };\n\n  changeInputUrl = e => {\n    this.setState({ inputLink: e.target.value });\n  };\n\n  changeOutputUrl = e => {\n    this.setState({ outputLink: e.target.value });\n  };\n\n  handleSubmit = async () => {\n    const { inputLink, outputLink } = this.state;\n    this.setState({ isLoading: true });\n    const response = await api.fetchReport(inputLink, outputLink);\n    this.setState({ results: response.data, isLoading: false });\n  };\n\n  render() {\n    const { inputLink, outputLink, results, isLoading } = this.state;\n    return (\n      <div>\n        <div className=\"ph4 pv4\">\n          <h1 className=\"f1 orange mb1\">Design with Confidence.</h1>\n          <p className=\"f4 measure lh-copy mt0 mid-gray mb3\">\n            Automate your visual testing by comparing what you design with what\n            you build.\n          </p>\n        </div>\n        <div className=\"bg-near-white pv1 ph4 bt bb b--light-gray\">\n          <div className=\"flex\">\n            <div className=\"pv3 flex flex-column w-100\">\n              <label className=\"b mb2\">\n                Enter the Invision link to your designs\n              </label>\n              <input\n                value={inputLink}\n                onChange={this.changeInputUrl}\n                className=\"f4 br2 ba b--moon-gray\"\n                placeholder=\"i.e. www.invisionapp.com\"\n                style={{ padding: \"8px 16px\" }}\n              />\n            </div>\n            <div className=\"pv3 flex flex-column w-100 ml2\">\n              <label className=\"b mb2\">Enter the link to your website</label>\n              <input\n                value={outputLink}\n                onChange={this.changeOutputUrl}\n                className=\"f4 br2 ba b--moon-gray\"\n                placeholder=\"i.e. www.google.com\"\n                style={{ padding: \"8px 16px\" }}\n              />\n            </div>\n            <div className=\"ml2 flex flex-column justify-end pv3\">\n              <button\n                onClick={this.handleSubmit}\n                className=\"f4 br2 bg-orange bn white\"\n                style={{ padding: \"9px 40px\" }}\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-near-white ph4 pv4 b--light-gray\">\n          <div className=\"flex bg-white pa3 relative\">\n            {isLoading && <LoadingView />}\n            <div className=\"w-100 bg-moon-gray mr2\" style={{ height: \"600px\" }}>\n              {results && (\n                <img\n                  alt=\"\"\n                  className=\"ba b--light-gray\"\n                  src={`${baseUrl}${results.input}`}\n                  style={{ objectFit: \"cover\", height: \"100%\" }}\n                />\n              )}\n            </div>\n            <div className=\"w-100 bg-moon-gray ml2\" style={{ height: \"600px\" }}>\n              {results && (\n                <img\n                  alt=\"\"\n                  className=\"ba b--light-gray\"\n                  src={`${baseUrl}${results.comparison}`}\n                  style={{ objectFit: \"cover\", height: \"100%\" }}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction Pricing() {\n  return (\n    <div className=\"bg-near-white\" style={{ height: \"100vh\" }}>\n      <div className=\"ph4 pt5 pb6 bg-white tc\">\n        <h1 className=\"f1 orange mb1\">Pricing built for teams</h1>\n        <p className=\"f4 measure-wide lh-copy mt0 mid-gray mb3 center\">\n          Get more out of Matchstick with automated features. Save your teams\n          hours of design and development time with a Pro subscription today.\n        </p>\n      </div>\n      <div className=\"bg-near-white center tc relative\">\n        <div\n          className=\"flex items-center justify-center absolute\"\n          style={{ top: \"-80px\", left: 0, right: 0 }}\n        >\n          <div\n            className=\"br4 bg-white ba b--near-white pa4 tc mr2\"\n            style={{ width: \"300px\", boxShadow: \"0 5px 30px rgba(0,0,0,.05)\" }}\n          >\n            <h2 className=\"mb3 mt0\">Monthly</h2>\n            <div className=\"mb4\">\n              <span className=\"f1\">$50</span>\n              <span>/mo</span>\n            </div>\n            <div className=\"mid-gray tc\">Up to 5,000 snapshots</div>\n            <div className=\"mid-gray tc mb3\">billed yearly</div>\n          </div>\n          <div\n            className=\"br4 bg-orange white ba b--near-white pa4 tc ml2\"\n            style={{ width: \"300px\", boxShadow: \"0 5px 30px rgba(0,0,0,.05)\" }}\n          >\n            <h2 className=\"mb3 mt0\">Yearly</h2>\n            <div className=\"mb4\">\n              <span className=\"f1\">$45</span>\n              <span>/mo</span>\n            </div>\n            <div className=\"tc\">Up to 5,000 snapshots</div>\n            <div className=\"tc mb3\">billed yearly</div>\n          </div>\n        </div>\n        <div className=\"pt6\">\n          <p className=\"mt5 mb4 f5 lh-copy measure mid-gray center inline-block\">\n            Reach out to us and we will get you set up with a Pro account today.\n            Upgrade your account today.\n          </p>\n          <a\n            className=\"f5 b ttu br2 bg-orange bn white no-underline\"\n            style={{ padding: \"12px 28px\" }}\n            href=\"/\"\n          >\n            Contact us\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pricing;\n","import React from \"react\";\nimport { HashRouter, Switch, Link, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Pricing from \"./pages/Pricing\";\nimport \"./App.css\";\n\nconst NavBar = () => (\n  <div className=\"bg-black white ph4 pv2\">\n    <div className=\"flex items-center justify-between\">\n      <Link to=\"/\" className=\"white no-underline\">\n        <h1 className=\"f4 normal\">Matchstick</h1>\n      </Link>\n      <Link to=\"/pricing\" className=\"white no-underline orange\">\n        Upgrade Now - Go Pro\n      </Link>\n    </div>\n  </div>\n);\n\nconst NotFound = () => <div>Page Not Found</div>;\n\nfunction App() {\n  return (\n    <div className=\"helvetica bg-near-white\">\n      <HashRouter>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/pricing\" exact component={Pricing} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}